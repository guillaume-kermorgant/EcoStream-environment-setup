# TODO: retrieve Prometheus svc dynamically here instead of hardcoding it
apiVersion: batch/v1
kind: Job
metadata:
  name: grafana-setup
  namespace: "{{ monitoring_namespace }}"
spec:
  template:
    spec:
      imagePullSecrets:
      - name: "{{ gitlab_container_registry_secret_name }}"
      containers:
      - name: setup
        image: "{{ grafana_setup_job_image }}"
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -x
            apk add jq
            echo "Waiting for Grafana to be up..."
            until curl -s -u "$GRAFANA_USER:$GRAFANA_PASSWORD" http://grafana.monitoring.svc.cluster.local/api/health | grep '"database"'; do sleep 5; done

            echo "Adding Prometheus datasource..."
            curl -s -X POST http://grafana.monitoring.svc.cluster.local/api/datasources \
              -u "$GRAFANA_USER:$GRAFANA_PASSWORD" \
              -H "Content-Type: application/json" \
              -d '{
                "name": "Prometheus",
                "type": "prometheus",
                "access": "proxy",
                "url": "http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090",
                "basicAuth": false,
                "isDefault": true
              }'

            echo "Downloading Grafana community dashboard ${GRAFANA_DASHBOARD_ID}..."
            curl -s https://grafana.com/api/dashboards/${GRAFANA_DASHBOARD_ID}/revisions/40/download -o default-dashboard.json

            echo "Creating dashboard import payload with jq..."
            jq -n \
                --argfile dashboard default-dashboard.json \
                '{
                  dashboard: $dashboard,
                  overwrite: true,
                  inputs: [
                    {
                      name: "DS_PROMETHEUS",
                      type: "datasource",
                      pluginId: "prometheus",
                      value: "Prometheus"
                    }
                  ]
                }' > dashboard-import-payload.json

            echo "Importing Prometheus dashboard..."
            curl -s -X POST http://grafana.monitoring.svc.cluster.local/api/dashboards/import \
              -u "$GRAFANA_USER:$GRAFANA_PASSWORD" \
              -H "Content-Type: application/json" \
              --data-binary @dashboard-import-payload.json

            # TODO: create alerts on dashboard

            echo "Grafana setup complete."
        env:
        - name: GRAFANA_USER
          valueFrom:
            secretKeyRef:
              name: "{{ grafana_admin_secret_name }}"
              key: admin-user
        - name: GRAFANA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ grafana_admin_secret_name }}"
              key: admin-password
        - name: GRAFANA_DASHBOARD_ID
          value: "{{ grafana_dashboard_id }}"
      restartPolicy: OnFailure
