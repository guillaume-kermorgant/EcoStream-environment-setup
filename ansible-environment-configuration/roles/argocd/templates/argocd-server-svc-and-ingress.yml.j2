apiVersion: v1
kind: Service
metadata:
  annotations:
    alb.ingress.kubernetes.io/backend-protocol-version: GRPC # This tells AWS to send traffic from the ALB using GRPC. Plain HTTP2 can be used, but the health checks wont be available because argo currently downgrade non-grpc calls to HTTP1
  labels:
    app: ecostream-argo-argogrpc
  name: ecostream-argo-argogrpc
  namespace: "{{ argocd_namespace }}"
spec:
  ports:
  - name: "443"
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: argocd-server
  sessionAffinity: None
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-3:531920760589:certificate/f1f058cf-9e44-4fc4-bada-048e7a4abf2e
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    # Use this annotation (which must match a service name) to route traffic to HTTP2 backends.
    alb.ingress.kubernetes.io/conditions.ecostream-argo-argogrpc: |
      [{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "Content-Type", "values":["application/grpc"]}}]
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    external-dns.alpha.kubernetes.io/hostname: "{{ argocd_hostname }}"
  name: ecostream-argocd
  namespace: "{{ argocd_namespace }}"
spec:
  rules:
  - host: "{{ argocd_hostname }}"
    http:
      paths:
      - path: /
        backend:
          service:
            name: ecostream-argo-argogrpc # The grpc service must be placed before the argocd-server for the listening rules to be created in the correct order
            port:
              number: 443
        pathType: Prefix
      - path: /
        backend:
          service:
            name: ecostream-argo-argocd-server
            port:
              number: 443
        pathType: Prefix
  tls:
  - hosts:
    - "{{ argocd_hostname }}"
{# ---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: "{{ ecostream_certificate_arn }}"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
    external-dns.alpha.kubernetes.io/hostname: "{{ argocd_hostname }}"
  labels:
    app.kubernetes.io/managed-by: ecostream-cicd
    app.kubernetes.io/name: argocd-server
  name: ecostream-argo-argocd-server
  namespace: argocd
spec:
  ingressClassName: alb
  rules:
  - host: "{{ argocd_hostname }}"
    http:
      paths:
      - backend:
          service:
            name: ecostream-argo-argocd-server
            port:
              number: 80
        path: /
        pathType: Prefix
      - backend:
          service:
            name: ecostream-argo-argocd-server-grpc
            port:
              number: 80
        path: /
        pathType: Prefix #}
