stages:
- tofu-validate
- tofu-plan
- tofu-apply
- tofu-destroy
- ansible-configure

variables:
  TOFU_DIR: "tofu-infrastructure_provisioning"
  ANSIBLE_DIR: "ansible-environment-configuration"
  TF_VAR_aws_region: $AWS_DEFAULT_REGION
  TF_VAR_env_name: $ENV_NAME
  # TF_LOG: DEBUG

default:
  image: registry.gitlab.com/gkermo/ecostream/base_images/gitlab-opentofu:1.1.0-opentofu1.9.0-alpine-amd64
  before_script:
  - |
    cd $TOFU_DIR
    tofu --version
    tofu init -backend-config="address=https://gitlab.com/api/v4/projects/68895536/terraform/state/${ENV_NAME}" \
      -backend-config="lock_address=https://gitlab.com/api/v4/projects/68895536/terraform/state/${ENV_NAME}/lock" \
      -backend-config="unlock_address=https://gitlab.com/api/v4/projects/68895536/terraform/state/${ENV_NAME}/lock" \
      -backend-config="lock_method=POST" \
      -backend-config="unlock_method=DELETE" \
      -backend-config="username=${GITLAB_USERNAME}" \
      -backend-config="password=${GITLAB_TOKEN}"

tofu-validate:
  stage: tofu-validate
  script:
  - tofu validate

tofu-plan:
  stage: tofu-plan
  script:
  - |
    tofu plan -input=false
  artifacts:
    paths:
    - $TOFU_DIR/planfile
    when: always

tofu-apply:
  stage: tofu-apply
  script:
  - tofu apply -auto-approve -input=false
  when: manual

tofu-destroy:
  stage: tofu-destroy
  script:
  - tofu destroy -auto-approve -input=false
  when: manual

ansible-configure:
  stage: ansible-configure
  script:
  - |
    cd $ANSIBLE_DIR
    echo "TODO: run Ansible playbook"
